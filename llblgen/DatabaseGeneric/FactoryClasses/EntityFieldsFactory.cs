///////////////////////////////////////////////////////////////
// This is generated code. If you modify this code, be aware
// of the fact that when you re-generate the code, your changes
// are lost. If you want to keep your changes, make this file read-only
// when you have finished your changes, however it is recommended that
// you inherit from this class to extend the functionality of this generated
// class or you modify / extend the templates used to generate this code.
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 1.0.2005.1
// Code is generated on: 05 September 2006 21:59:49
// Code is generated using templates: C# template set for MS Access (2000/XP/2003) (1.0.2005.1)
// Templates vendor: Solutions Design.
// Templates version: 1.0.2005.1.111705
//////////////////////////////////////////////////////////////
using System;
using DirectSports.BL;
using DirectSports.BL.HelperClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace DirectSports.BL.FactoryClasses
{
	/// <summary>Generates IEntityFields2 instances for different kind of Entities.</summary>
	public partial class EntityFieldsFactory
	{
		/// <summary>Private CTor, no instantiation possible.</summary>
		private EntityFieldsFactory()
		{
		}

		/// <summary>General factory entrance method which will return an EntityFields object with the format generated by the factory specified</summary>
		/// <param name="relatedEntityType">The type of entity the fields are for</param>
		/// <returns>The IEntityFields2 instance requested</returns>
		public static IEntityFields2 CreateEntityFieldsObject(EntityType relatedEntityType)
		{
			IEntityFields2 fieldsToReturn=null;
			switch(relatedEntityType)
			{
				case DirectSports.BL.EntityType.ProductEntity:
					fieldsToReturn = CreateProductEntityFields();
					break;
				case DirectSports.BL.EntityType.ProductSectionEntity:
					fieldsToReturn = CreateProductSectionEntityFields();
					break;
				case DirectSports.BL.EntityType.RoleEntity:
					fieldsToReturn = CreateRoleEntityFields();
					break;
				case DirectSports.BL.EntityType.SpecialOfferEntity:
					fieldsToReturn = CreateSpecialOfferEntityFields();
					break;
				case DirectSports.BL.EntityType.UserEntity:
					fieldsToReturn = CreateUserEntityFields();
					break;
				case DirectSports.BL.EntityType.UserRoleLinkEntity:
					fieldsToReturn = CreateUserRoleLinkEntityFields();
					break;
			}
			return fieldsToReturn;
		}
		
		/// <summary>General method which will return an array of IEntityFieldCore objects, used by the InheritanceInfoProvider. Only the fields defined in the entity are returned, no inherited fields.</summary>
		/// <param name="entityName">the name of the entity to get the fields for. Example: "CustomerEntity"</param>
		/// <returns>array of IEntityFieldCore fields, defined in the entity with the name specified</returns>
		internal static IEntityFieldCore[] CreateFields(string entityName)
		{
			IEntityFieldCore[] toReturn = null;
			switch(entityName)
			{





				default:
					break;
			}
			return toReturn;
		}
		


		/// <summary>Creates a complete EntityFields instance for the ProductEntity.</summary>
		private static IEntityFields2 CreateProductEntityFields()
		{

			IEntityFields2 fieldsToReturn = new EntityFields2((int)ProductFieldIndex.AmountOfFields, InheritanceInfoProviderSingleton.GetInstance());
			for(int i=0;i<(int)ProductFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductFieldIndex)i);
			}
			return fieldsToReturn;
		}


		/// <summary>Creates a complete EntityFields instance for the ProductSectionEntity.</summary>
		private static IEntityFields2 CreateProductSectionEntityFields()
		{

			IEntityFields2 fieldsToReturn = new EntityFields2((int)ProductSectionFieldIndex.AmountOfFields, InheritanceInfoProviderSingleton.GetInstance());
			for(int i=0;i<(int)ProductSectionFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductSectionFieldIndex)i);
			}
			return fieldsToReturn;
		}


		/// <summary>Creates a complete EntityFields instance for the RoleEntity.</summary>
		private static IEntityFields2 CreateRoleEntityFields()
		{

			IEntityFields2 fieldsToReturn = new EntityFields2((int)RoleFieldIndex.AmountOfFields, InheritanceInfoProviderSingleton.GetInstance());
			for(int i=0;i<(int)RoleFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((RoleFieldIndex)i);
			}
			return fieldsToReturn;
		}


		/// <summary>Creates a complete EntityFields instance for the SpecialOfferEntity.</summary>
		private static IEntityFields2 CreateSpecialOfferEntityFields()
		{

			IEntityFields2 fieldsToReturn = new EntityFields2((int)SpecialOfferFieldIndex.AmountOfFields, InheritanceInfoProviderSingleton.GetInstance());
			for(int i=0;i<(int)SpecialOfferFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SpecialOfferFieldIndex)i);
			}
			return fieldsToReturn;
		}


		/// <summary>Creates a complete EntityFields instance for the UserEntity.</summary>
		private static IEntityFields2 CreateUserEntityFields()
		{

			IEntityFields2 fieldsToReturn = new EntityFields2((int)UserFieldIndex.AmountOfFields, InheritanceInfoProviderSingleton.GetInstance());
			for(int i=0;i<(int)UserFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((UserFieldIndex)i);
			}
			return fieldsToReturn;
		}


		/// <summary>Creates a complete EntityFields instance for the UserRoleLinkEntity.</summary>
		private static IEntityFields2 CreateUserRoleLinkEntityFields()
		{

			IEntityFields2 fieldsToReturn = new EntityFields2((int)UserRoleLinkFieldIndex.AmountOfFields, InheritanceInfoProviderSingleton.GetInstance());
			for(int i=0;i<(int)UserRoleLinkFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((UserRoleLinkFieldIndex)i);
			}
			return fieldsToReturn;
		}



		#region Included Code

		#endregion
	}
}
